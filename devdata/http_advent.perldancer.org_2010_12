<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Adding a feed to your application | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2010" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2010">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="adding_a_feed_to_your_application"></a>Adding a feed to your application</h1>

<p>Now that you have written a nice application with Dancer, you want to add a RSS
feed to publish your articles. For this task, you can use the plugin
<a href="https://metacpan.org/module/Dancer::Plugin::Feed">Dancer::Plugin::Feed</a>.</p>
<p>The goal of this module is to provide an easy way to generate a feed in <b>Atom</b>
or <b>RSS</b>. For this tutorial, we will see how we use it in the Advent Calendar
application.</p>
<h2><a name="adding_a_simple_feed"></a>Adding a simple feed</h2>

<p>In the advent calendar application, each article is stored in a POD file stored 
on disk. Each day, a new article will be visible, and should be added to the
feed. We will see how to do that.</p>
<p>First, we load the plugin in the application.</p>
<pre class="prettyprint">use Dancer;
use Dancer::Plugin::Feed;</pre>

<p>Now we need a function that will, for each day, return the list of articles,
with, for each articles, if it should be visible:</p>
<pre class="prettyprint">sub _articles {
    my $year = shift;
    my @days = qw/1..24/;
    my @articles;

    foreach my $day (@days) {
        if (_article_is_visible($year, $day) {
            push @articles, _article( $year, $day );
        }
    }
    @articles = sort { $a-&gt;{day} &lt;=&gt; $b-&gt;{day} } @articles;
    return \@articles;
}

sub _article_is_visible {
    # decide if this article should be visible at this date
}</pre>

<p>And of course, we need to build each article from POD, set the date of the
publication, the title, the permalink, etc.</p>
<pre class="prettyprint">sub _article {
     my ( $year, $day ) = @_;
     ...
     # skip if not visible
     return {
         title   =&gt; $title,
         content =&gt; $content,
         link    =&gt; $permalink,
         issued  =&gt; DateTime-&gt;new( year =&gt; $year, month =&gt; 12, day =&gt; $day ),
     };
 }</pre>

<p>And to finish, our route to return the content of the RSS feed. This route gets
the <b>year</b> as an argument, and returns the list of articles for this year:</p>
<pre class="prettyprint">get '/feed/:year/rss' =&gt; sub {
    my $articles = _articles( params-&gt;{year} );
    create_feed(
        format  =&gt; 'RSS',
        entries =&gt; $articles,
        title   =&gt; 'my awesome RSS feed',
    );
};</pre>

<p>That's it. The important part here is the <b>create_feed</b> method. This method
take a list of parameters that will be used to build the feed.</p>
<h3><a name="how_to_let_the_user_choose_the_format"></a>How to let the user choose the format</h3>

<p>In the previous example, we've seen how to create a RSS feed. But maybe some of
your users would have preferred an Atom feed, so we will let the decide what
format they prefer. We only need to update our previous route for this:</p>
<pre class="prettyprint">get '/feed/:year/:format' =&gt; sub {
  my $format = params-&gt;{format};
  my $articles = _articles(params-&gt;{year});
  create_feed(
    format =&gt; $format,
    ...
  );
};</pre>

<p>Now, they can use e.g. <code>/2010/atom</code>.</p>
<h3><a name="setting_default_values_in_your_configuration"></a>Setting default values in your configuration</h3>

<p>You can of course configure the default values for your feed in the
configuration. We can create this configuration:</p>
<pre class="prettyprint">plugins:
  Feed:
    title: PerlDancer Advent Calendar
    copyright: PerlDancer
    tagline: PerlDancer advent calendar, a community effort
    description: this is a description for our calendar</pre>

<h3><a name="aliases_methods"></a>Aliases methods</h3>

<p><a href="https://metacpan.org/module/Dancer::Plugin::Feed">Dancer::Plugin::Feed</a> export another two methods: <b>create_rss_feed</b> and
<b>create_atom_feed</b>. Those method set the <b>format</b> argument for you.</p>
<pre class="prettyprint">get '/feed/atom' =&gt; sub {
    create_atom_feed(...);
};

get '/feed/rss' =&gt; sub {
    create_rss_feed(...);
};</pre>

<h2><a name="see_also"></a>See also</h2>

<p>Under the hood, <a href="https://metacpan.org/module/Dancer::Plugin::Feed">Dancer::Plugin::Feed</a> uses <a href="https://metacpan.org/module/XML::Feed">XML::Feed</a>.</p>
<h2><a name="author"></a>Author</h2>

<p>This article has been written by Franck Cuny for the Perl Dancer Advent Calendar
2010.</p>
<h2><a name="copyright"></a>Copyright</h2>

<p>Copyright (C) 2010 by Franck Cuny <code>&lt;franck@lumberjaph.net&gt;</code></p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
